#!/bin/bash

# Shiori Diary - –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è
# –í–µ—Ä—Å–∏—è: 3.0.0
# –î–∞—Ç–∞: 2024

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
echo ""
echo -e "${BLUE}üöÄ Shiori Diary - –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è${NC}"
echo -e "${BLUE}==========================================${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    echo "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: https://docs.docker.com/get-docker/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    echo "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: https://docs.docker.com/compose/install/"
    exit 1
fi

success "Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ root
if [ "$EUID" -eq 0 ]; then
    warning "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç root. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∞–º–∏ sudo."
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö..."
mkdir -p ./data
chmod 755 ./data
success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ./data —Å–æ–∑–¥–∞–Ω–∞"

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f .env ]; then
    info "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ JWT —Å–µ–∫—Ä–µ—Ç–∞
    JWT_SECRET=$(openssl rand -base64 32 2>/dev/null || head /dev/urandom | tr -dc A-Za-z0-9 | head -c 32)

    cat > .env << EOF
# Shiori Diary - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω $(date)

# JWT –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
JWT_SECRET=${JWT_SECRET}
JWT_EXPIRES_IN=7d

# Backend –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
NODE_ENV=production
PORT=3001

# Frontend –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
VITE_API_URL=http://localhost:3001

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ–ø–ª–æ—è
COMPOSE_PROJECT_NAME=shiori
EOF

    success ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º JWT —Å–µ–∫—Ä–µ—Ç–æ–º"
else
    info ".env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."
fi

# –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –¥–µ–ø–ª–æ—è
echo ""
info "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–µ–ø–ª–æ—è:"
echo "1) –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (development) - —Å hot reload"
echo "2) –ü—Ä–æ–¥–∞–∫—à–Ω (production) - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞"
echo "3) –¢–æ–ª—å–∫–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "4) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
echo "5) –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
echo "6) –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"

read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-6): " deploy_option

case $deploy_option in
    1)
        info "–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."

        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω—ã
        docker-compose down 2>/dev/null || true

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        npm run install:all

        # –ó–∞–ø—É—Å–∫ –≤ dev —Ä–µ–∂–∏–º–µ
        info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        npm run dev
        ;;

    2)
        info "–ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ..."

        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker-compose down 2>/dev/null || true

        # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
        info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
        docker-compose build --no-cache

        info "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker-compose up -d

        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
        info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        sleep 10

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
        info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
        if docker-compose ps | grep -q "Up"; then
            success "–°–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã!"
            echo ""
            echo -e "${GREEN}üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost${NC}"
            echo -e "${GREEN}üîß API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3001${NC}"
            echo ""
            info "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
            echo "  docker-compose logs -f          # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
            echo "  docker-compose ps               # –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
            echo "  docker-compose down             # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
            echo "  docker-compose restart          # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
        else
            error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–∏—Å–æ–≤!"
            echo ""
            warning "–ü–æ–∫–∞–∑—ã–≤–∞—é –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
            docker-compose logs --tail=20
        fi
        ;;

    3)
        info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker-compose restart
        success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!"
        ;;

    4)
        info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose down
        success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
        ;;

    5)
        info "–ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)..."
        docker-compose logs -f
        ;;

    6)
        info "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
        echo ""
        docker-compose ps
        echo ""

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        if docker-compose ps | grep -q "Up"; then
            success "–°–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç!"
            echo ""
            echo -e "${GREEN}üåê Frontend: http://localhost${NC}"
            echo -e "${GREEN}üîß Backend API: http://localhost:3001${NC}"
            echo -e "${GREEN}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ API: http://localhost:3001/api/statistics${NC}"
            echo ""

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
            disk_usage=$(df -h . | awk 'NR==2 {print $5}')
            echo -e "üíø –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${disk_usage}"

            # –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            if [ -f "./data/diary.db" ]; then
                db_size=$(ls -lh ./data/diary.db | awk '{print $5}')
                echo -e "üóÑÔ∏è  –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${db_size}"
            fi
        else
            warning "–°–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
        fi
        ;;

    *)
        error "–ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è –≤—ã–±—Ä–∞–Ω–∞!"
        exit 1
        ;;
esac

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
echo ""
info "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "  ./deploy.sh                    # –ó–∞–ø—É—Å–∫ —ç—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞"
echo "  docker-compose logs backend    # –õ–æ–≥–∏ —Ç–æ–ª—å–∫–æ backend"
echo "  docker-compose logs frontend   # –õ–æ–≥–∏ —Ç–æ–ª—å–∫–æ frontend"
echo "  docker-compose exec backend sh # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É"
echo ""

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
if [ "$deploy_option" = "2" ]; then
    echo ""
    warning "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è production:"
    echo "  1. –ò–∑–º–µ–Ω–∏—Ç–µ JWT_SECRET –≤ .env —Ñ–∞–π–ª–µ"
    echo "  2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—Ä–∞—Ç–Ω—ã–π –ø—Ä–æ–∫—Å–∏ (nginx/Apache) —Å HTTPS"
    echo "  3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ firewall –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞"
    echo "  4. –†–µ–≥—É–ª—è—Ä–Ω–æ –¥–µ–ª–∞–π—Ç–µ –±—ç–∫–∞–ø—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (./data/diary.db)"
    echo "  5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo ""
fi

success "–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
