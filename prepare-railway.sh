#!/bin/bash

# Shiori - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ Railway –¥–µ–ø–ª–æ—é
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Railway.app

set -e

echo "üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Shiori –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Railway..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "package.json" ] || [ ! -d "backend" ] || [ ! -d "frontend" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ Shiori"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º .nvmrc –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".nvmrc" ]; then
    echo "üìù –°–æ–∑–¥–∞–µ–º .nvmrc —Å –≤–µ—Ä—Å–∏–µ–π Node.js 20..."
    echo "20" > .nvmrc
else
    echo "‚úÖ .nvmrc —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –û–±–Ω–æ–≤–ª—è–µ–º engines –≤ –∫–æ—Ä–Ω–µ–≤–æ–º package.json
echo "‚öôÔ∏è  –û–±–Ω–æ–≤–ª—è–µ–º package.json..."
if ! grep -q '"engines"' package.json; then
    # –î–æ–±–∞–≤–ª—è–µ–º engines —Å–µ–∫—Ü–∏—é –ø–æ—Å–ª–µ version
    sed -i.bak '/"version"/a\
  "engines": {\
    "node": ">=20.0.0",\
    "npm": ">=9.0.0"\
  },' package.json && rm package.json.bak
    echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã engines –≤ package.json"
else
    echo "‚úÖ Engines —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ package.json"
fi

# –°–æ–∑–¥–∞–µ–º railway.json
echo "üöÇ –°–æ–∑–¥–∞–µ–º railway.json..."
cat > railway.json << 'EOF'
{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "NIXPACKS",
    "buildCommand": "npm run install:all"
  },
  "deploy": {
    "startCommand": "cd backend && npm start",
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 10
  }
}
EOF

# –°–æ–∑–¥–∞–µ–º nixpacks.toml –¥–ª—è —Ç–æ—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üì¶ –°–æ–∑–¥–∞–µ–º nixpacks.toml..."
cat > nixpacks.toml << 'EOF'
[phases.setup]
nixPkgs = ["nodejs_20", "npm"]

[phases.install]
cmds = ["npm ci"]

[phases.build]
cmds = [
    "cd backend && npm install",
    "cd frontend && npm install && npm run build"
]

[start]
cmd = "cd backend && npm start"

[variables]
NODE_ENV = "production"
PORT = "3001"
EOF

# –°–æ–∑–¥–∞–µ–º .railway –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–º
echo "üîß –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
mkdir -p .railway

cat > .railway/variables.example << 'EOF'
# Railway Environment Variables Template
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway Dashboard -> Variables

NODE_ENV=production
PORT=3001

# –í–ê–ñ–ù–û: –°–º–µ–Ω–∏—Ç–µ —ç—Ç–æ –Ω–∞ —Å–≤–æ–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á!
JWT_SECRET=change-this-to-your-super-secret-jwt-key-32-chars-minimum

# –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ JWT —Ç–æ–∫–µ–Ω–æ–≤
JWT_EXPIRES_IN=7d

# –î–ª—è production —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:
# - –°–ª–æ–∂–Ω—ã–π JWT_SECRET (32+ —Å–∏–º–≤–æ–ª–æ–≤)
# - HTTPS –¥–æ–º–µ–Ω
# - –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –±—ç–∫–∞–ø—ã
EOF

# –°–æ–∑–¥–∞–µ–º Procfile –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
echo "üìã –°–æ–∑–¥–∞–µ–º Procfile..."
echo "web: cd backend && npm start" > Procfile

# –û–±–Ω–æ–≤–ª—è–µ–º .gitignore –¥–ª—è Railway —Ñ–∞–π–ª–æ–≤
echo "üìù –û–±–Ω–æ–≤–ª—è–µ–º .gitignore..."
if ! grep -q ".railway" .gitignore 2>/dev/null; then
    echo "" >> .gitignore
    echo "# Railway" >> .gitignore
    echo ".railway/variables" >> .gitignore
    echo ".railway/*.env" >> .gitignore
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º package.json –≤ backend
echo "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º backend package.json..."
cd backend

# –î–æ–±–∞–≤–ª—è–µ–º engines –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
if ! grep -q '"engines"' package.json; then
    # –î–æ–±–∞–≤–ª—è–µ–º engines —Å–µ–∫—Ü–∏—é
    sed -i.bak '/"devDependencies"/i\
  "engines": {\
    "node": ">=18.0.0",\
    "npm": ">=8.0.0"\
  },' package.json && rm package.json.bak
    echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã engines –≤ backend/package.json"
fi

cd ..

# –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend
echo "üé® –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend..."
if [ -f "frontend/package.json" ]; then
    echo "‚úÖ Frontend package.json –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ùå –í–Ω–∏–º–∞–Ω–∏–µ: frontend/package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ Railway –¥–µ–ø–ª–æ—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
echo "   git add ."
echo "   git commit -m '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ Railway –¥–µ–ø–ª–æ—é'"
echo "   git push"
echo ""
echo "2. –í Railway Dashboard:"
echo "   - New Project -> Deploy from GitHub repo"
echo "   - –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
echo "   - –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .railway/variables.example"
echo "   - –û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ: JWT_SECRET"
echo ""
echo "3. –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è:"
echo "   - Railway –¥–∞—Å—Ç –≤–∞–º URL —Ç–∏–ø–∞: https://shiori-production.up.railway.app"
echo "   - –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è –∏ –ø–æ–ª—å–∑—É–µ–º—Å—è!"
echo ""
echo "üîë –í–ê–ñ–ù–û: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–º–µ–Ω–∏—Ç–µ JWT_SECRET –Ω–∞ —á—Ç–æ-—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ!"
echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–µ–ø–ª–æ–∏—Ç—å –Ω–∞ Railway!"
